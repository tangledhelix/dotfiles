#!/usr/bin/env perl
#
# Reads EXIF, renames files from original names to
# date_model_number.jpg
#
# 30 June 2005 - Dan Lowe <dan@tangledhelix.com>
#
# Caveat: This script is sort of Canon-specific, i.e. use of the
# FileNumber attribute, which I don't think is all that standard.
# But, works for me! All my cameras are Canons...
#
# Examples:
#
# IMG_5532.JPG -> 2001-08-12_canon-powershot-s100_153-5352.jpg
# aut_3712.jpg -> 2000-07-01_canon-powershot-a50_137-3712.jpg
#

use strict;
use warnings;

use Getopt::Std;
getopts 'hnq', \my %opt;

# must be a filename, unless -h was used.
if ((not $ARGV[0]) or ($opt{h})) {
    print <<_EOF_;

Usage: $0 [ -n | -q ] <file> [ <file> [ ... ] ]

    -n: Show what would happen, but don't rename anything
    -q: Be quiet (i.e. only print when there's an error)

_EOF_

    exit 8;
}

use lib '/Users/dan/local/lib/perl5/site_perl';
use Image::ExifTool;

my $exifTool = new Image::ExifTool;

for my $file (@ARGV) {
    $exifTool->ExtractInfo($file);

    my $createDate = $exifTool->GetValue('CreateDate');
    my $fNumber = $exifTool->GetValue('FileNumber');
    my $model = $exifTool->GetValue('Model');

    unless ($createDate and $model and $fNumber) {
        print STDERR "** ERROR: missing parameters: $file (Skipping)\n";
        next;
    }

    # Get just the YYYY/MM/DD and get rid of the :'s
    $createDate = (split(/ /, $createdate))[0];
    $createDate =~ s/:/-/g;

    # Get rid of spaces in model name
    $model =~ s/ /-/g;

    # Isolate original file extension for later use
    my $ext = $file;
    $ext =~ s/\.([^.]+)$//;
    $ext = $1;

    my $newFile = lc "${createDate}_${model}_${fNumber}.$ext";

    # -n means show me what you are going to do, but don't do it.
    if ($opt{n}) {
        print "$file -> $newFile\n";
        next;
    }

    if (rename $file, $newFile) {
        # -q means quiet; only output errors
        print "$file -> $newFile\n" unless $opt{q};
    } else {
        print STDERR "ERROR: rename failed: $file\n";
    }
}

